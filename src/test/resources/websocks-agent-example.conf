#
# The listening socks5 port
#
agent.listen 11080

#
# The username and password pair separated by a `:`
#
proxy.server.auth brade:brade1314

#
# These two fields are optional if you are using a standard jre
# For graalvm native image, they are required and will raise error
# if not specified
#
# agent.cacerts.path ./dep/cacerts
# agent.cacerts.pswd changeit
#

#
# This field is optional, default to `off`
# When enabled, the agent will listen on 0.0.0.0 instead of 127.0.0.1.
# This option turns your host into a socks5 gateway.
# However you should know that password is not supported.
#
agent.gateway on

#
# This field is optional
# Specify the pac server's ip address and listening port.
# e.g. 192.168.3.3:20080, then, visiting any url of this address will give you a response of pac,
# which always proxies to 192.168.3.3:${agent.listen}
#
# Also, the ip could be set to `*`, to let the agent choose an address.
# You should know that if you have multiple ips, the chosen address might not be what you wish for.
#
# NOTE: usually, you need to set agent.gateway on
#
agent.gateway.pac.address *:20080

#
# This field is optional, default to `off`
# When enabled, all net flow follows specifications of the sub protocols
# Otherwise an optimization may apply
# It's recommended to turn off this flag if network rtt is high
#
agent.strict off

#
# This field is optional, default to `10`
# Set the connection pool size.
# You can set this field to 0 to disable pooling
#
agent.pool 10

#
# ABOUT SYMBOLS:
#
# Symbols can be attached to `proxy.server.list.start` or `proxy.domain.list.start`.
# If not attached with any symbol, the symbol will be set to "DEFAULT".
#
# When a request arrives, the agent will check for domain in all domain lists
# (however, the order is an undefined behavior, except that DEFAULT list is always checked last).
# If any rule matches, the agent will retrieve the symbol of the list which contains the matched rule.
# Then the agent will get the SERVER list with the SAME symbol attached,
# and will get a healthy server from the server list to handle the proxy.
#

#
# The list of proxy server address
# use websocks:// for tcp connections
# use websockss:// for tls connections
#
# The `proxy.server.list.start` statement is not followed by any symbol,
# which will automatically append a `DEFAULT` symbol by the agent.
#
# NOTE: port should ALWAYS be specified, even if it's 80 or 443
#
proxy.server.list.start
#websocks://brade-websocks5.herokuapp.com:80
## use `websockss://` for tls connections
websockss://brade-websocks5.herokuapp.com:443
proxy.server.list.end

#
# The list of proxy server address
# The `proxy.server.list.start` statement is followed by a symbol named `TEST`.
#
#proxy.server.list.start TEST
#websocks://127.0.0.1:18687
#proxy.server.list.end

#
# The list of domains which DO require proxying.
# The `proxy.domain.list.start` statement is not followed by any symbol,
# which will automatically append a `DEFAULT` symbol by the agent.
#
# The elements of the list allows:
# 1. domain suffix, plain text, e.g. youtube.com
# 2. ip addresses text strings. ipv6 should not omit zeros
# 3. regexp, surrounded by two `/`, e.g. /.*google\.com.*/
# 4. pac file, surrounded by `[` and `]`, e.g. [~/proxy.pac]
# 5. port number, started by `:`, e.g. :14000
#
proxy.domain.list.start
#[pac.txt]
/.*google\.com.*/
youtube.com
id.heroku.com
proxy.domain.list.end

#
# The list of domains which DO require proxying.
# The `proxy.domain.list.start` statement is followed by a symbol named `TEST`.
#
#proxy.domain.list.start TEST
#163.com
#:14000
#proxy.domain.list.end

# -------
# EOF
# -------
